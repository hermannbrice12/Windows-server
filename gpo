# Importer le module Active Directory (s'assurer que le module est disponible)
Import-Module ActiveDirectory

# Fonction pour générer un mot de passe aléatoire
function GenererMotDePasse {
    $caracteres = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()-_=+"
    $motDePasse = ""
    for ($i = 0; $i -lt 12; $i++) {
        $motDePasse += $caracteres[(Get-Random -Minimum 0 -Maximum $caracteres.Length)]
    }
    return $motDePasse
}

# Fonction pour enregistrer les actions dans un fichier journal
function LogAction {
    param (
        [string]$message
    )
    $logFile = "C:\Logs\ADUserCreation.log"
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    $logMessage = "$timestamp - $message"
    Add-Content -Path $logFile -Value $logMessage
}

# Créer des OU (Organizational Units)
$ouNames = @("Domaine1", "Domaine2", "Domaine3")
foreach ($ouName in $ouNames) {
    try {
        if (-not (Get-ADOrganizationalUnit -Filter "Name -eq '$ouName'" -ErrorAction Stop)) {
            New-ADOrganizationalUnit -Name $ouName -Path "DC=votredomaine,DC=com" -ErrorAction Stop
            Write-Host "OU créé : $ouName"
            LogAction "OU créé : $ouName"
        } else {
            Write-Host "OU déjà existant : $ouName"
            LogAction "OU déjà existant : $ouName"
        }
    } catch {
        Write-Host "Erreur lors de la création de l'OU $ouName : $_"
        LogAction "Erreur lors de la création de l'OU $ouName : $_"
    }
}

# Boucle pour créer 5 utilisateurs dans chaque OU
foreach ($ouName in $ouNames) {
    for ($i = 1; $i -le 5; $i++) {
        # Générer le nom d'utilisateur
        $nomUtilisateur = "Utilisateur${i}_${ouName}"

        # Générer un mot de passe aléatoire
        $motDePasse = GenererMotDePasse

        try {
            # Créer l'utilisateur avec le nom d'utilisateur et le mot de passe
            New-ADUser -Name "Utilisateur $i" `
                       -SamAccountName $nomUtilisateur `
                       -UserPrincipalName "$nomUtilisateur@votredomaine.com" `
                       -AccountPassword (ConvertTo-SecureString -AsPlainText $motDePasse -Force) `
                       -Enabled $true `
                       -Path "OU=$ouName,DC=votredomaine,DC=com" -ErrorAction Stop

            # Afficher le nom d'utilisateur et le mot de passe généré
            Write-Host "Utilisateur créé : $nomUtilisateur dans $ouName"
            Write-Host "Mot de passe : $motDePasse"
            LogAction "Utilisateur créé : $nomUtilisateur dans $ouName avec mot de passe : $motDePasse"
        } catch {
            Write-Host "Erreur lors de la création de l'utilisateur $nomUtilisateur dans $ouName : $_"
            LogAction "Erreur lors de la création de l'utilisateur $nomUtilisateur dans $ouName : $_"
        }
    }
}
